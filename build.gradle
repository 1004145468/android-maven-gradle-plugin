
plugins {
	id "nu.studer.plugindev" version "1.0.4"
	id "com.gradle.plugin-publish" version "0.9.4"
}

apply plugin: "groovy"
apply plugin: "java-gradle-plugin"
apply plugin: "nu.studer.plugindev"
apply plugin: "jacoco"
apply plugin: "maven"

repositories {
	mavenCentral()
	mavenLocal()
}

ext {
	gradleVersions = '4.5'
	androidGradleBuildVersion = '3.0.0-beta3'
	androidCompileSdkVersion = 'android-26'
	androidBuildToolsVersion = '26.0.1'
}

configurations {
	jacocoRuntime
}

sourceSets {
	test {
		groovy {
			srcDirs = ['src/test/groovy', 'src/test/core/src/testFixtures/groovy', 'src/test/internal-testing/src/main/groovy' ]
		}
	}
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

ext {
    versions = [:]
}

versions.commons_io = '2.2'
versions.groovy = "2.4.12"
versions.maven = "3.0.4"
versions.findbugs = "2.0.1"

dependencies {
	jacocoRuntime "org.jacoco:org.jacoco.agent:${jacoco.toolVersion}:runtime"
	
	compile gradleApi()
	
	// from gradle/gradle/dependencies.gradle
	compileOnly "org.apache.maven:maven-core:${versions.maven}"
	
	testRuntime files(createClasspathManifest)

	testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude module: 'groovy-all'
    }

	testCompile	'junit:junit:4.12',
				'org.hamcrest:hamcrest-all:1.3',
				"org.codehaus.groovy:groovy-all:${versions.groovy}"
				
	// from gradle/subprojects/core/core.gradle, gradle/subprojects/internal-testing/internal-testing.gradle and gradle/gradle/dependencies.gradle
	testCompile	"commons-io:commons-io:${versions.commons_io}",
				'commons-lang:commons-lang:2.6',
				'org.objenesis:objenesis:1.2',
				'cglib:cglib:3.2.5',
				'org.jmock:jmock:2.5.1',
				dependencies.create('org.jmock:jmock-junit4:2.5.1') { exclude group: 'junit', module: 'junit-dep' }, //junit-dep pulls old definitions of core junit types.
				'org.jmock:jmock-legacy:2.5.1',
				'com.google.guava:guava-jdk5:17.0',
				'org.jsoup:jsoup:1.6.3',
				"com.google.code.findbugs:findbugs:${versions.findbugs}",
				'org.ow2.asm:asm:6.0'
	testCompile 'org.apache.ivy:ivy:2.2.0'
	testCompile 'org.apache.ant:ant:1.9.9'
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

test {
	systemProperty 'gradle.versions', gradleVersions
	systemProperty 'android.gradle.build.version', androidGradleBuildVersion
	systemProperty 'android.compile.sdk.version', androidCompileSdkVersion
	systemProperty 'android.build.tools.version', androidBuildToolsVersion
	systemProperty 'jacoco.runtime', configurations.jacocoRuntime.asPath.replace('\\', '/')
	systemProperty 'buildDir', "$buildDir".replace('\\', '/')
	
	doLast {
		def coverageFiles = fileTree("${buildDir}/jacoco").include('*.exec')
		coverageFiles.each { file ->
			jacocoTestReport {
				executionData file
			}
		} 
	}
}

plugindev {
	pluginId = 'com.github.dcendents.android-maven'
	pluginImplementationClass 'org.gradle.api.plugins.AndroidMavenPlugin'
	pluginName 'Gradle Android Maven Plugin'
	pluginDescription 'Modification to the standard Maven plugin to be compatible with android-library projects (aar).'
	pluginLicenses 'Apache-2.0'
	pluginTags 'gradle', 'plugin', 'android', 'maven'
	authorId 'dcendents'
	authorName 'Daniel Beland'
	authorEmail 'dcendents@gmail.com'
	projectUrl 'https://github.com/dcendents/android-maven-gradle-plugin'
	projectInceptionYear '2013'
	done() // do not omit this
}

ext {
	// Set values in ~/.gradle/gradle.properties, set default values otherwise for build to work
	bintrayUsername = project.properties['bintrayUsername'] != null ? project.properties['bintrayUsername'] : ""
	bintrayApiKey = project.properties['bintrayApiKey'] != null ? project.properties['bintrayApiKey'] : ""
	bintrayPassphrase = project.properties['bintrayPassphrase'] != null ? project.properties['bintrayPassphrase'] : ""
}

bintray {
	user = "${bintrayUsername}"
	key = "${bintrayApiKey}"

	dryRun = false
	publish = true
	pkg {
		repo = 'gradle-plugins'
		name = 'com.github.dcendents:android-maven-gradle-plugin'
		version {
			gpg {
				sign = true
				passphrase = "${bintrayPassphrase}"
			}
		}
	}
}

pluginBundle {
	website = 'https://github.com/dcendents/android-maven-gradle-plugin'
	vcsUrl = 'https://github.com/dcendents/android-maven-gradle-plugin'

	description = 'Modification to the standard Maven plugin to be compatible with android-library projects (aar).'

	plugins {
		androidMavenPlugin {
			id = 'com.github.dcendents.android-maven'
			displayName = 'Gradle Android Maven plugin'
			tags = ['maven', 'android']
			version = version
		}
	}

	mavenCoordinates {
		groupId = group
		artifactId = theName
		version = version
	}
}

jacoco {
	toolVersion = "0.7.7.201606060606"
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
		html.destination file("${buildDir}/jacocoHtml")
	}
}

jar.dependsOn test
jacocoTestReport.dependsOn test
check.dependsOn jacocoTestReport

task wrapper(type: Wrapper) {
    gradleVersion = '4.5'
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

if (System.env.TRAVIS == 'true' || System.env.CIRCLECI == 'true') {
	allprojects {
		tasks.withType(GroovyCompile) {
			groovyOptions.fork = false
		}
		tasks.withType(Test) {
			minHeapSize = '128m'
			maxHeapSize = '256m'
		}
	}
}
